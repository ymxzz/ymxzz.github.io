[{"title":"MySQLѧϰ","date":"2023-06-06T11:42:54.000Z","path":"2023/06/06/MySQL学习/","text":"-���ݿ⣺�������ݽṹ����֯���洢�͹������ݵĲֿ� -SQL (Structured query language�ṹ����ѯ����)�� ��һ�����ڷ��ʺʹ������ݿ�(��MySQL��SQL Server��Access��)�ı�׼�ļ�������ԣ���Χ�������ݵ���ɾ�Ĳ飬���ݿ�ģʽ�������޸ģ����ݷ��ʿ��ơ� MySQL���أ�https://dev.mysql.com/downloads/mysql/ ��ѹ�ļ��������� my.ini ��װ���ã� https://www.runoob.com/mysql/mysql-install.html mysql�汾�� mysql&gt; select version(); +-----------+ | version() | +-----------+ | 8.0.33 | +-----------+ 1 row in set (0.00 sec) �޸����룺 mysqladmin -u�û��� -p������ password ������ mysqladmin -uroot -pE6laBikl.SN4 password 12345 �鿴���ݿ��е��û��� mysql&gt; select user from user; +------------------+ | user | +------------------+ | mysql.infoschema | | mysql.session | | mysql.sys | | root | +------------------+ 4 rows in set (0.00 sec) �����û����û���Ϊguest������Ϊguest123�� mysql -u root -p mysql&gt; create user &#39;guest&#39;@&#39;localhost&#39; identified by &#39;guest123&#39;; Query OK, 0 rows affected (0.00 sec) mysql&gt; select user from user; +------------------+ | user | +------------------+ | guest | | mysql.infoschema | | mysql.session | | mysql.sys | | root | +------------------+ 5 rows in set (0.00 sec) ɾ��guest: mysql&gt; drop user &#39;guest&#39;@&#39;localhost&#39;; Query OK, 0 rows affected (0.00 sec) mysql&gt; select user from user; +------------------+ | user | +------------------+ | mysql.infoschema | | mysql.session | | mysql.sys | | root | +------------------+ 4 rows in set (0.00 sec) �������ݿ⣺ mysql&gt; create database mydatabase; Query OK, 1 row affected (0.00 sec) mysql&gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mydatabase | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.01 sec) ѡ�����ݿ⣺ mysql&gt; use mydatabase; Database changed ɾ�����ݿ⣺ mysql&gt; drop database mydatabase; Query OK, 0 rows affected (0.00 sec) mysql&gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | +--------------------+ 4 rows in set (0.00 sec) MySQL�������ͣ� https://www.runoob.com/mysql/mysql-data-types.html �������ݱ��� mysql&gt; create table mydatabase_tbl( -&gt; mydatabase_id int not null auto_increment, -&gt; mydatabase_title varchar(100) not null, -&gt; mydatabase_author varchar(40) not null, -&gt; submission_date DATE, -&gt; primary key ( mydatabase_id ) -&gt; )engine=InnoDB default charset=utf8; Query OK, 0 rows affected, 1 warning (0.01 sec) �鿴���Ľṹ mysql&gt; show tables; +----------------------+ | Tables_in_mydatabase | +----------------------+ | mydatabase_tbl | +----------------------+ 1 row in set (0.00 sec) mysql&gt; desc mydatabase_tbl; +-------------------+--------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------------------+--------------+------+-----+---------+----------------+ | mydatabase_id | int | NO | PRI | NULL | auto_increment | | mydatabase_title | varchar(100) | NO | | NULL | | | mydatabase_author | varchar(40) | NO | | NULL | | | submission_date | date | YES | | NULL | | +-------------------+--------------+------+-----+---------+----------------+ 4 rows in set (0.00 sec) �������ݣ� mysql&gt; insert into mydatabase_tbl -&gt; (mydatabase_title, mydatabase_author, submission_date) -&gt; values -&gt; (&quot;MySQLѧϰ&quot;,&quot;YMѧ��&quot;,now()); Query OK, 1 row affected, 1 warning (0.00 sec) �鿴�� mysql&gt; select * from mydatabase_tbl; +---------------+------------------+-------------------+-----------------+ | mydatabase_id | mydatabase_title | mydatabase_author | submission_date | +---------------+------------------+-------------------+-----------------+ | 1 | MySQLѧϰ | YMѧ�� | 2023-06-08 | +---------------+------------------+-------------------+-----------------+ 1 row in set (0.00 sec) ɾ�� mysql&gt; drop table mydatabase_tbl; Query OK, 0 rows affected (0.01 sec)","link":"","tags":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"}]},{"title":"java配置","date":"2023-06-06T09:13:35.000Z","path":"2023/06/06/java配置/","text":"jdk下载：https://www.oracle.com/ 1234&gt;&gt;java -versionjava version &quot;20.0.1&quot; 2023-04-18Java(TM) SE Runtime Environment (build 20.0.1+9-29)Java HotSpot(TM) 64-Bit Server VM (build 20.0.1+9-29, mixed mode, sharing) hello_world.java 12345public class hello_world&#123; public static void main(String[] args)&#123; System.out.println(&quot;Hello world!&quot;); &#125;&#125; javac jdk提供的编译工具进行编译javac hello_world.java 123456λ tree/f 卷 软件 的文件夹 PATH 列表 卷序列号为 0503-CB42 D:. hello_world.class hello_world.java java运行java hello_world Hello world!","link":"","tags":[{"name":"java学习","slug":"java学习","permalink":"http://example.com/tags/java%E5%AD%A6%E4%B9%A0/"}]},{"title":"虚析构函数","date":"2023-06-06T02:56:30.000Z","path":"2023/06/06/虚析构函数/","text":"基类的虚析构函数使得某些情况下释放内存时能调用派生类的析构函数，避免内存泄漏 123456789101112131415161718192021222324252627282930313233#include &lt;iostream&gt;class A&#123;public: A()&#123;std::cout&lt;&lt;&quot;A被创建~&quot;&lt;&lt;std::endl;&#125; //构造函数：实例化对象时被调用的方法 virtual ~A()&#123;std::cout&lt;&lt;&quot;A被销毁~&quot;&lt;&lt;std::endl;&#125; //析构函数：销毁对象（释放内存）时被调用的方法&#125;;class B : public A&#123;public: B()&#123;std::cout&lt;&lt;&quot;B被创建~&quot;&lt;&lt;std::endl;&#125; ~B()&#123;std::cout&lt;&lt;&quot;B被销毁~&quot;&lt;&lt;std::endl;&#125;&#125;;int main()&#123; A* a = new A; delete a; //A被创建~ //A被销毁~ B* b = new B; delete b; //A被创建~ //B被创建~ //B被销毁~ //A被销毁 A* c = new B; delete c; //A被创建~ //B被创建~ //A被销毁~ //只有基类A的的析构函数被调用，派生类B的没有调用，可能造成内存泄漏，所以需要把基类A的析构函数改为虚函数，才会先调用派生类B的析构函数，再调用基类A的 &#125; 12345class A&#123;public: A()&#123;std::cout&lt;&lt;&quot;A被创建~&quot;&lt;&lt;std::endl;&#125; 时被调用的方法 virtual ~A()&#123;std::cout&lt;&lt;&quot;A被销毁~&quot;&lt;&lt;std::endl;&#125; //改为虚析构函数&#125;; 1234567 A* c = new B;delete c; //A被创建~//B被创建~//B被销毁~//A被销毁~","link":"","tags":[{"name":"C++学习","slug":"C-学习","permalink":"http://example.com/tags/C-%E5%AD%A6%E4%B9%A0/"}]},{"title":"C++ 联合体","date":"2023-06-05T02:56:17.000Z","path":"2023/06/05/Union/","text":"处理相同的数据 12345678910111213141516171819202122232425262728293031323334353637#include &lt;iostream&gt;struct vector1&#123; float x,y;&#125;;struct vector2&#123; union&#123; //匿名union //成员间对应变量共用相同内存 struct&#123; //成员1 float x,y,z,w; &#125;; struct&#123; //成员2 vector1 a,b; &#125;; &#125;; &#125;;int main()&#123; union U&#123; int a[10]; int b; &#125;; U u; std::cout&lt;&lt;&amp;u.b&lt;&lt;std::endl; //0x7f08bffb60 std::cout&lt;&lt;u.a&lt;&lt;std::endl; //0x7f08bffb60 共用相同内存 vector2 v = &#123;1.1f, 2.2f, 3.3f, 4.4f&#125;; std::cout&lt;&lt;v.a.x; //1.1 std::cout&lt;&lt;v.a.y; //2.2 std::cout&lt;&lt;v.b.x; //3.3 std::cout&lt;&lt;v.b.y; //4.4 &#125;","link":"","tags":[{"name":"C++学习","slug":"C-学习","permalink":"http://example.com/tags/C-%E5%AD%A6%E4%B9%A0/"}]},{"title":"C++刷题笔记","date":"2023-06-04T12:33:01.000Z","path":"2023/06/04/C++刷题笔记/","text":"当数组名字作为函数实参传递1234567int foo(char x[10])&#123; return sizeof(x);&#125;int main()&#123; char a[10]; std::cout&lt;&lt; foo(a);&#125; -当数组名字作为函数实参传递时会退化为指针，此处打印指针的大小，32位指针大小为4，64为则为8-打印： 8 (32位的话打印4) C语言的三种基本控制结构（）","link":"","tags":[{"name":"C++刷题笔记","slug":"C-刷题笔记","permalink":"http://example.com/tags/C-%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}]},{"title":"Hello World","date":"2023-06-02T08:05:06.844Z","path":"2023/06/02/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"","tags":[]},{"title":"hexo����ͱʼ�","date":"2021-05-07T06:48:23.000Z","path":"2021/05/07/hexo搭建博客笔记/","text":"���ذ�װGit��nodeJS ���ذ�װGit��nodeJS ֮��ʹ��blogĿ¼��Git Bash���в��� _config.yml����(���ú���ܲ����Լ���GitHub�ֿ�)1234deploy: type: git repo: https://github.com/xxxx/xxxx.github.io.git branch: master ��װָ��-��װhexo���npm install hexo-cli -g-��ʼ������hexo init myblog-��װ���⣬��init���ɵ�myblog��Ŀ¼�� git clone theme-url themes/theme-nameд������hexo new &quot;����&quot;��װ������npm install hexo-deployer-git --save����github,����ǰ��Ҫע��GitHub�˺ţ��½�һ���ֿ������֮ǰ���ɵĶ���hexo clean���ɾ�̬���£���дhexo ghexo generate�������񱾵�Ԥ������дhexo shexo server��������,��дhexo dhexo deployerʹ��yilia-plus���⣺https://zhousiwei.gitee.io/yilia-plus-demo/2019/08/01/hexo%E4%B8%BB%E9%A2%98%E4%B9%8Bhexo-theme-yilia-plus/�ο���ַhttps://blog.csdn.net/sinat_37781304/article/details/82729029yilia-plus���⣺https://gitee.com/nate-lin/yilia-plus/","link":"","tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"软件分享","date":"2021-05-07T06:48:23.000Z","path":"2021/05/07/动画绘画软件分享/","text":"软件分享： 2d动画绘画软件分享：链接： https://pan.baidu.com/s/1_upZ4siX2Lr160zjW5A_Yg 提取码：mymk","link":"","tags":[]},{"title":"记录每日好心情","date":"2021-05-07T06:48:23.000Z","path":"2021/05/07/随笔/","text":"随笔 写下每日的心情不知道干什么，先随便找点东西学着！","link":"","tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]}]